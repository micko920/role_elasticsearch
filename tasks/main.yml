---
- name: Disable swap
  become: true
  become_user: root
  shell: "swapoff -a"
  register: swapoff_result
  when:
    - ansible_swaptotal_mb > 0
    - ansible_virtualization_type != 'docker'

- name: Remove swapfile from /etc/fstab
  mount:
    name: swap
    fstype: swap
    state: absent
  when:
    - swapoff_result == 0
    - ansible_virtualization_type != 'docker'

- name: Add or modify hard nofile limits for wildcard domain
  pam_limits:
    domain: '*'
    limit_type: hard
    limit_item: nofile
    value: 'unlimited'
    use_max: true

- name: Add or modify hard nofile limits for wildcard domain
  pam_limits:
    domain: '*'
    limit_type: '-'
    limit_item: nproc
    value: 'unlimited'
    use_max: true

- name: Add or modify memlock limits for wildcard domain
  pam_limits:
    domain: '*'
    limit_type: '-'
    limit_item: memlock
    value: 'unlimited'
    use_max: true

# This needs to be set in the host of the docker container to work
- name: Set the vm memory map max count
  sysctl:
    name: vm.max_map_count
    value: '262144'
    state: present
    sysctl_file: "/etc/sysctl.d/60-elasticsearch.conf"
  when: ansible_virtualization_type != 'docker'

- include_tasks: setup-Debian.yml
  when: ansible_os_family == 'Debian'

- name: Install Elasticsearch.
  package:
    name: elasticsearch
    state: "{{ elasticsearch_package_state }}"

- name: Create the tmp path
  file:
    path: "{{ elasticsearch_tmp_dir }}"
    owner: "{{ elasticsearch_user }}"
    group: "{{ elasticsearch_group }}"
    state: directory
    mode: 0700
    recurse: true

- name: Configure Elasticsearch.
  template:
    src: "{{ item }}.j2"
    dest: /etc/elasticsearch/{{ item }}
    owner: root
    group: elasticsearch
    mode: 0660
  with_items:
    - elasticsearch.yml
    - jvm.options

- name: enable Elasticsearch service.
  systemd:
    name: elasticsearch.service
    enabled: true
    masked: false
  when: systemd_pid_1 is defined and systemd_pid_1

- name: enable and set final state of Elasticsearch service.
  systemd:
    name: elasticsearch.service
    state: "{{ elasticsearch_final_service_state }}"
  when: systemd_pid_1 is defined and systemd_pid_1
